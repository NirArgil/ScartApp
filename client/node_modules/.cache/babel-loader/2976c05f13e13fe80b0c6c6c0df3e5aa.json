{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Scart1\\\\client\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React, { Fragment, useEffect } from \"react\"; //Components\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n//Login\nimport Landing from \"./components/layout/Landing\";\nimport Routes from \"./components/routing/Routes\"; // REDUX\n\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utilities/setAuthToken\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n} //Styles\n\n\nconst getProducts = async () => await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    // We dispatch the loadUser action by taking the 'store'\n    // directly & call dispatch- a method in the 'store'\n    // then pass the loadUser action in it to dispatch it.\n    // To stop the 'userEffect HOOK' from running on a constant loop,\n    // & only have it run once, when its mounted, we pass an empty\n    // array [] as a 2nd argument. This now works like a 'componentDidMount'.\n    store.dispatch(loadUser());\n  }, []);\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n\n  const getTotalItems = items => items.reduce((ack, item) => ack + item.amount, 0);\n\n  const handleAddToCart = clickedItem => {\n    setCartItems(prev => {\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map(item => item.id === clickedItem.id ? { ...item,\n          amount: item.amount + 1\n        } : item);\n      }\n\n      return [...prev, { ...clickedItem,\n        amount: 1\n      }];\n    });\n  };\n\n  const handleRemoveFromCart = id => {\n    setCartItems(prev => prev.reduce((ack, item) => {\n      if (item.id === id) {\n        if (item.amount === 1) return ack;\n        return [...ack, { ...item,\n          amount: item.amount - 1\n        }];\n      } else {\n        return [...ack, item];\n      }\n    }, []));\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Somethine went wrong ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Landing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Routes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 1\n  }, this);\n};\n\n_s(App, \"+NstTx0DPAzy8Hmbm6kLYNewiUY=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Scart1/client/src/App.tsx"],"names":["useState","useQuery","BrowserRouter","Router","Route","Switch","React","Fragment","useEffect","LinearProgress","Landing","Routes","Provider","store","loadUser","setAuthToken","localStorage","token","getProducts","fetch","json","App","dispatch","cartOpen","setCartOpen","cartItems","setCartItems","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","item","amount","handleAddToCart","clickedItem","prev","isItemInCart","find","id","map","handleRemoveFromCart"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React, { Fragment, useEffect } from \"react\";\n\n//Components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\n//Login\nimport Landing from \"./components/layout/Landing\";\nimport Routes from \"./components/routing/Routes\";\n\n// REDUX\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport { register } from \"./actions/auth\";\nimport setAuthToken from \"./utilities/setAuthToken\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\n//Styles\nimport { Wrapper, StyledButton } from './App.styles';\n\n//Type\nexport type CartItemType = {\n    id: number;\n    category: string;\n    description: string;\n    image: string;\n    price: number;\n    title: string;\n    amount: number;\n  }\n\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\n\nconst App = () => {\n  useEffect(() => {\n    // We dispatch the loadUser action by taking the 'store'\n    // directly & call dispatch- a method in the 'store'\n    // then pass the loadUser action in it to dispatch it.\n\n    // To stop the 'userEffect HOOK' from running on a constant loop,\n    // & only have it run once, when its mounted, we pass an empty\n    // array [] as a 2nd argument. This now works like a 'componentDidMount'.\n    store.dispatch(loadUser());\n  }, []);\n\n  const [cartOpen , setCartOpen] = useState (false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const { data,isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts \n    );\n  console.log(data);\n\nconst getTotalItems = (items: CartItemType[]) => \nitems.reduce((ack: number, item) => ack + item.amount, 0);\n  \nconst handleAddToCart = (clickedItem: CartItemType) => {\n   setCartItems(prev => {\n     const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n     if (isItemInCart) {\n       return prev.map( item => \n         item.id === clickedItem.id ?\n         {...item, amount: item.amount + 1}\n         : item\n       );\n     }\n       return [...prev, {...clickedItem, amount: 1 }];\n\n   });  \n};\n\nconst handleRemoveFromCart = (id: number) => {\n  setCartItems(prev => \n    prev.reduce((ack, item) => {\n     if (item.id === id) {\n       if(item.amount === 1) return ack;\n       return [...ack, {...item, amount: item.amount - 1}];\n     } else {\n      return [...ack, item];      \n     }\n    }, [] as CartItemType[])\n  );\n};\n\nif (isLoading) return <LinearProgress />;\nif (error) return <div>Somethine went wrong ...</div>;\n\nreturn ( \n<Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );   \n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}