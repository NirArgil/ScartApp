{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u200F\\u200FScart3\\\\client\\\\src\\\\components\\\\auth\\\\Logout.js\",\n    _s = $RefreshSig$();\n\nimport { connect, Provider } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { loadUser } from \"../../actions/auth\";\nimport { login } from \"../../actions/auth\";\nimport PrivateRoute, { isAuthenticated } from \"../routing/PrivateRoute\";\nimport { logout } from \"../../actions/auth\";\nimport LOGOUT from \"../../reducers/auth\";\nimport combineReducers from \"../../reducers/\";\nimport store from \"../../store\";\nexport const Logout = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const Loggedin = useSelector(initialState => initialState.LOGOUT);\n  const Loggedout = useSelector(initialState => initialState.isAuthenticated);\n\n  const onlogoutClick = async e => {\n    e.preventDefault();\n    localStorage.clear();\n    window.location.href = '/';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Loggedin ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"logout btn btn-primary\",\n        onClick: e => onlogoutClick(e),\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"logout btn btn-primary\",\n        onClick: e => onlogoutClick(e),\n        children: \"Log AAAAAAA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logout, \"f9bZEmxdhKeJQpC5gL/5mBCpuco=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Logout;\nLogout.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(Logout);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/Users/User/Desktop/‏‏Scart3/client/src/components/auth/Logout.js"],"names":["connect","Provider","Link","Redirect","PropTypes","React","Fragment","useState","useSelector","useDispatch","loadUser","login","PrivateRoute","isAuthenticated","logout","LOGOUT","combineReducers","store","Logout","dispatch","Loggedin","initialState","Loggedout","onlogoutClick","e","preventDefault","localStorage","clear","window","location","href","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";;;;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,aAAlC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAUC,QAAV,QAA0B,oBAA1B;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,OAAOC,YAAP,IAAsBC,eAAtB,QAA4C,yBAA5C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAO;AAAA;;AAE7B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGZ,WAAW,CAACa,YAAY,IAAIA,YAAY,CAACN,MAA9B,CAA5B;AACA,QAAMO,SAAS,GAAGd,WAAW,CAACa,YAAY,IAAIA,YAAY,CAACR,eAA9B,CAA7B;;AAEA,QAAMU,aAAa,GAAG,MAAMC,CAAN,IAAW;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AAED,GALH;;AAOE,sBACE,QAAC,QAAD;AAAA,2BACA;AAAA,gBACIV,QAAQ,gBACR;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,wBAA5B;AAAqD,QAAA,OAAO,EAAGI,CAAD,IAAOD,aAAa,CAACC,CAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAKV;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,wBAA5B;AAAqD,QAAA,OAAO,EAAEA,CAAC,IAAID,aAAa,CAACC,CAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAeE,CA5BG;;GAAMN,M;UAEIT,W,EACAD,W,EACCA,W;;;KAJLU,M;AA8BXA,MAAM,CAACa,SAAP,GAAmB;AACjBjB,EAAAA,MAAM,EAAEV,SAAS,CAAC4B,IAAV,CAAeC,UADN;AAEjBpB,EAAAA,eAAe,EAAET,SAAS,CAAC8B;AAFV,CAAnB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCvB,EAAAA,eAAe,EAAEuB,KAAK,CAACC,IAAN,CAAWxB;AADM,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CACpBmC,eADoB,EAEpB;AAAErB,EAAAA;AAAF,CAFoB,CAAP,CAGbI,MAHa,CAAf","sourcesContent":["import { connect, Provider } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport  { loadUser } from \"../../actions/auth\";\r\nimport {login} from \"../../actions/auth\";\r\nimport PrivateRoute, {isAuthenticated} from \"../routing/PrivateRoute\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport LOGOUT from \"../../reducers/auth\";\r\nimport combineReducers from \"../../reducers/\";\r\nimport store from \"../../store\";\r\n\r\nexport const Logout = ( ) => {  \r\n\r\nconst dispatch = useDispatch();\r\nconst Loggedin = useSelector(initialState => initialState.LOGOUT);\r\nconst Loggedout = useSelector(initialState => initialState.isAuthenticated);\r\n\r\nconst onlogoutClick = async e => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    window.location.href = '/';  \r\n    \r\n  };  \r\n\r\n  return (\r\n    <Fragment>\r\n    <div> \r\n      { Loggedin ? \r\n      ( <button type=\"button\" class=\"logout btn btn-primary\" onClick={(e) => onlogoutClick(e)}>\r\n      Log Out\r\n      </button> \r\n       ) : ( \r\n      <button type=\"button\" class=\"logout btn btn-primary\" onClick={e => onlogoutClick(e)}>\r\n      Log AAAAAAA\r\n      </button> )}\r\n    </div>\r\n    </Fragment>\r\n   \r\n     \r\n  )};\r\n      \r\n  Logout.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n  )(Logout);\r\n"]},"metadata":{},"sourceType":"module"}