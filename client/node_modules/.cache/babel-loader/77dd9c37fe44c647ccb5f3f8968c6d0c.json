{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useState}from'react';import{useQuery}from'react-query';import React from\"react\";//Components\nimport Item from'./Item/Item';import Cart from'./Cart/Cart';import Drawer from'@material-ui/core/Drawer';import LinearProgress from'@material-ui/core/LinearProgress';import Grid from'@material-ui/core/Grid';import AddShoppingCartIcon from'@material-ui/icons/AddShoppingCart';import Badge from'@material-ui/core/Badge';//Login\nimport setAuthToken from\"./utilities/setAuthToken\";//Styles\nimport{Wrapper,StyledButton}from'./App.styles';//Type\nvar getProducts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://fakestoreapi.com/products');case 2:_context.next=4;return _context.sent.json();case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getProducts(){return _ref.apply(this,arguments);};}();if(localStorage.token){setAuthToken(localStorage.token);}var Shop=function Shop(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),cartOpen=_useState2[0],setCartOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];var _useQuery=useQuery('products',getProducts),data=_useQuery.data,isLoading=_useQuery.isLoading,error=_useQuery.error;console.log(data);var getTotalItems=function getTotalItems(items){return items.reduce(function(ack,item){return ack+item.amount;},0);};var handleAddToCart=function handleAddToCart(clickedItem){setCartItems(function(prev){var isItemInCart=prev.find(function(item){return item.id===clickedItem.id;});if(isItemInCart){return prev.map(function(item){return item.id===clickedItem.id?_objectSpread(_objectSpread({},item),{},{amount:item.amount+1}):item;});}return[].concat(_toConsumableArray(prev),[_objectSpread(_objectSpread({},clickedItem),{},{amount:1})]);});};var handleRemoveFromCart=function handleRemoveFromCart(id){setCartItems(function(prev){return prev.reduce(function(ack,item){if(item.id===id){if(item.amount===1)return ack;return[].concat(_toConsumableArray(ack),[_objectSpread(_objectSpread({},item),{},{amount:item.amount-1})]);}else{return[].concat(_toConsumableArray(ack),[item]);}},[]);});};if(isLoading)return/*#__PURE__*/_jsx(LinearProgress,{});if(error)return/*#__PURE__*/_jsx(\"div\",{children:\"Somethine went wrong ...\"});return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Drawer,{anchor:\"right\",open:cartOpen,onClose:function onClose(){return setCartOpen(false);},children:/*#__PURE__*/_jsx(Cart,{cartItems:cartItems,addToCart:handleAddToCart,removeFromCart:handleRemoveFromCart})}),/*#__PURE__*/_jsx(StyledButton,{className:\"BTN\",onClick:function onClick(){return setCartOpen(true);},children:/*#__PURE__*/_jsx(Badge,{badgeContent:getTotalItems(cartItems),color:\"error\",children:/*#__PURE__*/_jsx(AddShoppingCartIcon,{})})}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:data===null||data===void 0?void 0:data.map(function(item){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(Item,{item:item,handleAddToCart:handleAddToCart})},item.id);})})]});};export default Shop;","map":{"version":3,"sources":["C:/Users/User/Desktop/‏‏Scart3/client/src/Shop.tsx"],"names":["useState","useQuery","React","Item","Cart","Drawer","LinearProgress","Grid","AddShoppingCartIcon","Badge","setAuthToken","Wrapper","StyledButton","getProducts","fetch","json","localStorage","token","Shop","cartOpen","setCartOpen","cartItems","setCartItems","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","item","amount","handleAddToCart","clickedItem","prev","isItemInCart","find","id","map","handleRemoveFromCart"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport React, { Fragment, useEffect } from \"react\";\r\n\r\n//Components\r\nimport Item from './Item/Item';\r\nimport Cart from './Cart/Cart';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\n//Login\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Routes from \"./components/routing/Routes\";\r\n\r\n// REDUX\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport { register } from \"./actions/auth\";\r\nimport setAuthToken from \"./utilities/setAuthToken\";\r\n\r\n//Styles\r\nimport { Wrapper, StyledButton } from './App.styles';\r\n\r\n//Type\r\nexport type CartItemType = {\r\n    id: number;\r\n    category: string;\r\n    description: string;\r\n    image: string;\r\n    price: number;\r\n    title: string;\r\n    amount: number;\r\n  }\r\n\r\n\r\nconst getProducts = async (): Promise<CartItemType[]> =>\r\n  await (await fetch('https://fakestoreapi.com/products')).json();\r\n\r\n\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\nconst Shop = () => {\r\n  \r\n\r\n  const [cartOpen , setCartOpen] = useState (false);\r\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\r\n  const { data,isLoading, error } = useQuery<CartItemType[]>(\r\n    'products',\r\n    getProducts \r\n    );\r\n  console.log(data);\r\n\r\nconst getTotalItems = (items: CartItemType[]) => \r\nitems.reduce((ack: number, item) => ack + item.amount, 0);\r\n  \r\nconst handleAddToCart = (clickedItem: CartItemType) => {\r\n   setCartItems(prev => {\r\n     const isItemInCart = prev.find(item => item.id === clickedItem.id);\r\n\r\n     if (isItemInCart) {\r\n       return prev.map( item => \r\n         item.id === clickedItem.id ?\r\n         {...item, amount: item.amount + 1}\r\n         : item\r\n       );\r\n     }\r\n       return [...prev, {...clickedItem, amount: 1 }];\r\n\r\n   });  \r\n};\r\n\r\nconst handleRemoveFromCart = (id: number) => {\r\n  setCartItems(prev => \r\n    prev.reduce((ack, item) => {\r\n     if (item.id === id) {\r\n       if(item.amount === 1) return ack;\r\n       return [...ack, {...item, amount: item.amount - 1}];\r\n     } else {\r\n      return [...ack, item];      \r\n     }\r\n    }, [] as CartItemType[])\r\n  );\r\n};\r\n\r\nif (isLoading) return <LinearProgress />;\r\nif (error) return <div>Somethine went wrong ...</div>;\r\n\r\nreturn (    \r\n  <Wrapper>\r\n    < Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\r\n        <Cart \r\n        cartItems={cartItems} \r\n        addToCart={handleAddToCart} \r\n        removeFromCart={handleRemoveFromCart}\r\n        />\r\n    </Drawer>\r\n    <StyledButton className=\"BTN\" onClick={() => setCartOpen(true)} >\r\n        <Badge badgeContent = {getTotalItems(cartItems)} color=\"error\">\r\n        <AddShoppingCartIcon />\r\n        </Badge>\r\n    </StyledButton>\r\n    <Grid container spacing={3}>\r\n        {data?.map(item => (\r\n        <Grid item key= { item.id } xs={12} sm={4}>\r\n            <Item item={item} handleAddToCart={handleAddToCart}/>\r\n        </Grid>\r\n        ))}\r\n    </Grid>\r\n</Wrapper>\r\n  );   \r\n};\r\n\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}