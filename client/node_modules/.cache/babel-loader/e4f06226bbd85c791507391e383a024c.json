{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Scart1\\\\client\\\\src\\\\components\\\\auth\\\\Logout.js\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport LOGOUT from \"../../reducers/auth\";\nimport { loadUser } from \"../../actions/auth\";\nimport { login } from \"../../actions/auth\";\nimport PrivateRoute, { isAuthenticated } from \"../routing/PrivateRoute\";\nimport { logout } from \"../../actions/auth\";\nexport const Logout = props => {\n  const onlogoutClick = async e => {\n    e.preventDefault();\n    localStorage.clear();\n    window.location.href = '/';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", loadUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"logout btn btn-primary\",\n      onClick: e => onlogoutClick(e),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_c = Logout;\nLogout.propTypes = {\n  logout: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(Logout);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Scart1/client/src/components/auth/Logout.js"],"names":["connect","Link","Redirect","PropTypes","React","Fragment","useState","LOGOUT","loadUser","login","PrivateRoute","isAuthenticated","logout","Logout","props","onlogoutClick","e","preventDefault","localStorage","clear","window","location","href","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAUC,QAAV,QAA0B,oBAA1B;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,OAAOC,YAAP,IAAsBC,eAAtB,QAA4C,yBAA5C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAO,MAAMC,MAAM,GAAKC,KAAF,IAAa;AAKjC,QAAMC,aAAa,GAAG,MAAMC,CAAN,IAAW;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,YAAY,CAACC,KAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AAED,GALD;;AAOA,sBACI;AAAA,oBAAQd,QAAQ,gBAAK;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,wBAA5B;AAAqD,MAAA,OAAO,EAAEQ,CAAC,IAAID,aAAa,CAACC,CAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,GAEH,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAME,CAlBG;KAAMH,M;AAoBXA,MAAM,CAACU,SAAP,GAAmB;AACjBX,EAAAA,MAAM,EAAET,SAAS,CAACqB,IAAV,CAAeC,UADN;AAEjBd,EAAAA,eAAe,EAAER,SAAS,CAACuB;AAFV,CAAnB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,eAAe,EAAEiB,KAAK,CAACC,IAAN,CAAWlB;AADM,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CACpB2B,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nimport LOGOUT from \"../../reducers/auth\";\r\nimport  { loadUser } from \"../../actions/auth\";\r\nimport {login} from \"../../actions/auth\";\r\nimport PrivateRoute, {isAuthenticated} from \"../routing/PrivateRoute\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nexport const Logout = ( props ) => {  \r\n\r\n \r\n \r\n\r\n  const onlogoutClick = async e => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    window.location.href = '/';  \r\n    \r\n  };  \r\n\r\n  return (\r\n      <div> { loadUser ? ( <button type=\"button\" class=\"logout btn btn-primary\" onClick={e => onlogoutClick(e)}>\r\n      Log Out\r\n   </button> ) : ( null )}\r\n  </div>\r\n\r\n  )};\r\n      \r\n  Logout.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n  )(Logout);\r\n"]},"metadata":{},"sourceType":"module"}