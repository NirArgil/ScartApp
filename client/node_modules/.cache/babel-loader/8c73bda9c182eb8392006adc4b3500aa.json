{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{connect}from\"react-redux\";import React,{Fragment,useEffect}from\"react\";import{getProfiles}from\"../../actions/profile\";import ProfileItem from\"./ProfileItem\";import LinearProgress from'@material-ui/core/LinearProgress';var Profiles=function Profiles(_ref){var getProfiles=_ref.getProfiles,_ref$profile=_ref.profile,profiles=_ref$profile.profiles,loading=_ref$profile.loading;useEffect(function(){getProfiles();},[getProfiles]);return/*#__PURE__*/_jsx(Fragment,{children:loading?/*#__PURE__*/_jsx(LinearProgress,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Developers\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fab fa-connectdevelop\"}),\" Browse and connect with developers\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"profiles\",children:profiles&&profiles.length>0?profiles.map(function(profile){return/*#__PURE__*/_jsx(ProfileItem,{profile:profile},profile._id);}):/*#__PURE__*/_jsx(\"h4\",{children:\"No profiles found...\"})})]})});};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{getProfiles:getProfiles})(Profiles);","map":{"version":3,"sources":["C:/Users/User/Desktop/‏‏Scart3/client/src/components/profiles/Profiles.js"],"names":["connect","React","Fragment","useEffect","getProfiles","ProfileItem","LinearProgress","Profiles","profile","profiles","loading","length","map","_id","mapStateToProps","state"],"mappings":"wFAAA,OAASA,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,WAAT,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAlDH,CAAAA,WAAkD,MAAlDA,WAAkD,mBAArCI,OAAqC,CAA1BC,QAA0B,cAA1BA,QAA0B,CAAhBC,OAAgB,cAAhBA,OAAgB,CACpEP,SAAS,CAAC,UAAM,CACdC,WAAW,GACZ,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,mBACE,KAAC,QAAD,WACGM,OAAO,cACN,KAAC,cAAD,IADM,cAGN,MAAC,QAAD,yBACE,WAAI,SAAS,CAAC,oBAAd,wBADF,cAEE,WAAG,SAAS,CAAC,MAAb,wBACE,UAAG,SAAS,CAAC,uBAAb,EADF,yCAFF,cAMI,YAAK,SAAS,CAAC,UAAf,UACCD,QAAQ,EAAIA,QAAQ,CAACE,MAAT,CAAkB,CAA9B,CACCF,QAAQ,CAACG,GAAT,CAAa,SAAAJ,OAAO,qBAClB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,EAAkBA,OAAO,CAACK,GAA1B,CADkB,EAApB,CADD,cAKC,4CANF,EANJ,GAJJ,EADF,CAwBD,CA7BD,CAoCA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCP,OAAO,CAAEO,KAAK,CAACP,OADiB,CAAL,EAA7B,CAIA,cAAeR,CAAAA,OAAO,CACpBc,eADoB,CAEpB,CAAEV,WAAW,CAAXA,WAAF,CAFoB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useEffect } from \"react\";\r\n\r\nimport { getProfiles } from \"../../actions/profile\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <LinearProgress />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n            developers\r\n          </p>\r\n            <div className=\"profiles\">\r\n            {profiles && profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);"]},"metadata":{},"sourceType":"module"}