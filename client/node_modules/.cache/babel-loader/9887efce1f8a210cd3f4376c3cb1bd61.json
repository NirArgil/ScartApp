{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/\\u200F\\u200FScart3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Make our http request here\nimport axios from\"axios\";import{setAlert}from\"./alert\";import setAuthToken from\"../utilities/setAuthToken\";import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE}from\"./types\";var API_URL=\"http://localhost:3000/users\";// if(process.env.NODE_ENV === 'development'){\n//   API_URL = 'http://localhost:3000/users';\n// }\n// Load User Action Function\nexport var loadUser=function loadUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// check if token exists from localStorage;\n// if it does set it to our headers\nif(localStorage.token){setAuthToken(localStorage.token);}_context.prev=1;_context.next=4;return axios.get(\"/api/auth\");case 4:res=_context.sent;dispatch({type:USER_LOADED,payload:res.data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);dispatch({type:AUTH_ERROR});case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Register User Action\nexport var register=function register(_ref2){var name=_ref2.name,email=_ref2.email,password=_ref2.password;return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};body=JSON.stringify({name:name,email:email,password:password});_context2.prev=2;_context2.next=5;return axios.post(\"api/users\",body,config);case 5:res=_context2.sent;dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadUser());_context2.next=15;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);errors=_context2.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,\"danger\"));});}dispatch({type:REGISTER_FAIL});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};// Login User Action\nexport var login=function login(email,password){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res,errors;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};body=JSON.stringify({email:email,password:password});_context3.prev=2;_context3.next=5;return axios.post(\"/api/auth\",body,config);case 5:res=_context3.sent;dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadUser());_context3.next=15;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](2);errors=_context3.t0.response.data.errors;if(errors){errors.forEach(function(error){return dispatch(setAlert(error.msg,\"danger\"));});}dispatch({type:LOGIN_FAIL});case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[2,10]]);}));return function(_x3){return _ref4.apply(this,arguments);};}();};// Logout / Clear Profile\nexport var logout=function logout(){return function(dispatch){dispatch({type:CLEAR_PROFILE});dispatch({type:LOGOUT});};};","map":{"version":3,"sources":["C:/Users/User/Desktop/‏‏Scart3/client/src/actions/auth.js"],"names":["axios","setAlert","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","API_URL","loadUser","dispatch","localStorage","token","get","res","type","payload","data","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["// Make our http request here\r\nimport axios from \"axios\";\r\n\r\nimport { setAlert } from \"./alert\";\r\nimport setAuthToken from \"../utilities/setAuthToken\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from \"./types\";\r\n\r\nlet API_URL=\"http://localhost:3000/users\";\r\n\r\n// if(process.env.NODE_ENV === 'development'){\r\n//   API_URL = 'http://localhost:3000/users';\r\n// }\r\n\r\n// Load User Action Function\r\nexport const loadUser = () => async dispatch => {\r\n  // check if token exists from localStorage;\r\n  // if it does set it to our headers\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User Action\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"api/users\", body, config);\r\n  \r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User Action\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n    \r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};"]},"metadata":{},"sourceType":"module"}